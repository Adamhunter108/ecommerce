{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Loader.js","components/Message.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","page","pages","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderList","orderDeliver","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","useState","keyword","setKeyword","history","useHistory","Form","onSubmit","event","preventDefault","push","location","pathname","inline","Row","Col","Control","placeholder","name","onChange","target","value","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","detail","message","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","alt","src","width","height","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Rating","text","color","style","Product","Card","_id","Img","image","Body","Title","as","Text","rating","numReviews","price","Loader","Spinner","animation","role","margin","display","Message","children","Alert","Paginate","split","Pagination","Array","keys","active","listProducts","listProductDetails","ProductCarousel","useEffect","Carousel","fade","pause","Image","fluid","Caption","HomeScreen","search","console","log","class","sm","md","lg","xl","ProductScreen","match","qty","setQty","setRating","comment","setComment","loadingProductReview","errorProductReview","successProductReview","params","rounded","ListGroup","description","countInStock","xs","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","e","addToCart","setItem","stringify","CartScreen","Number","removeFromCartHandler","removeFromCart","reduce","accumulator","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","required","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","responsive","totalPrice","isPaid","paidAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalState","setPostalState","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","window","paypal","script","document","createElement","async","onload","body","appendChild","addPayPalScript","href","isDelivered","deliveredAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","bordered","hover","UserEditScreen","userId","setIsAdmin","errorUpdate","loadingUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7b3bb49a.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_FRESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer, } from './reducers/orderReducers'\n\n// https://redux.js.org/api/api-reference\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userDelete: userDeleteReducer,\n    userUpdate: userUpdateReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n    cart:{ cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\n    userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import { \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST, \n    PRODUCT_DETAILS_SUCCESS, \n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL, \n} from '../constants/productConstants'\n\n\n// reducers are functions that takes in the current state and an action type what to do with the state and will update the store\n\nexport const productListReducer = (state ={ products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_LIST_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                page: action.payload.page,\n                pages: action.payload.pages\n            }\n\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\nexport const productDetailsReducer = (state ={ product: {reviews:[]} }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload }\n\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload }\n\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_UPDATE_RESET:\n            return { product: {} }\n\n        default:\n            return state\n    }\n}\n\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REVIEW_REQUEST:\n            return { loading: true }\n\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\n            return { loading: false, success: true, }\n\n        case PRODUCT_CREATE_REVIEW_FAIL:\n            return { loading: false, error: action.payload }\n\n        case PRODUCT_CREATE_REVIEW_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { loading: true, products: [] }\n\n        case PRODUCT_TOP_SUCCESS:\n            return { loading: false, products: action.payload, }\n\n        case PRODUCT_TOP_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS  } from '../constants/cartConstants'\n\n\nexport const cartReducer = (state={ cartItems:[], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if(existItem){\n                return{\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n                }\n            }else{\n                return{\n                    ...state,\n                    cartItems:[...state.cartItems, item]\n                }\n            }\n\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n            // The filter() method creates a new array with all elements that pass the test implemented by the provided function.\n\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload\n            }\n\n        case CART_CLEAR_ITEMS:\n            return {\n                ...state, \n                cartItems: []\n            }\n\n        default:\n            return state\n    }\n}","import { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n    USER_UPDATE_RESET,\n } from '../constants/userConstants'\n\n\n export const userLoginReducer = (state ={ }, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\nexport const userRegisterReducer = (state ={ }, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload }\n\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state, loading: true }\n\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload }\n\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload }\n            \n        case USER_DETAILS_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload }\n\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n            \n        default:\n            return state\n    }\n}\n\n\nexport const userListReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n        case USER_LIST_REQUEST:\n            return { loading: true }\n\n        case USER_LIST_SUCCESS:\n            return { loading: false, users: action.payload }\n\n        case USER_LIST_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_LIST_RESET:\n            return { users: [] }\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return { loading: true }\n\n        case USER_DELETE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_DELETE_FAIL:\n            return { loading: false, error: action.payload }\n\n        default:\n            return state\n    }\n}\n\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true }\n\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, success: true }\n\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload }\n\n        case USER_UPDATE_RESET:\n            return { user: {} }\n\n        default:\n            return state\n    }\n}","import { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_RESET,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n } from '../constants/orderConstants'\n\n export const orderCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_CREATE_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                order: action.payload\n            }\n\n        case ORDER_CREATE_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_CREATE_RESET:\n            return {}\n\n\n        default:\n            return state\n    }\n}\n\nexport const orderDetailsReducer = (state = {loading:true, orderItems:[], shippingAddress:{}}, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case ORDER_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDER_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n            }\n\n        case ORDER_PAY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_PAY_RESET:\n            return {}        \n\n        default:\n            return state\n    }\n}\n\n\nexport const orderDeliverReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading: false,\n                success: true\n            }\n\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_DELIVER_RESET:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const orderListMyReducer = (state = {orders:[]}, action) => {\n    switch (action.type) {\n        case ORDER_LIST_MY_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_MY_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_MY_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case ORDER_LIST_MY_RESET:\n            return {\n                orders: []\n            }        \n\n        default:\n            return state\n    }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDER_LIST_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case ORDER_LIST_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import React, { useState } from 'react'\nimport { Button, Form, Row, Col } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\n\nfunction SearchBox() {\n    const [keyword, setKeyword] = useState('')\n\n    let history = useHistory()\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        if (keyword) {\n            history.push(`/?keyword=${keyword}&page=1`)\n        } else {\n            history.push(history.push(history.location.pathname))\n        }\n    }\n    return (\n        <Form onSubmit={submitHandler} inline>\n            <Row>\n                <Col>\n                    <Form.Control\n                        type='text'\n                        placeholder='Search'\n                        name='q'\n                        onChange={(event) => setKeyword(event.target.value)}\n                        className='mr-sm-2 ml-sm-5'\n                    ></Form.Control>\n                    \n                </Col>\n\n                {/* <Col>\n                    <i className=\"fas fa-search\"></i>\n                </Col> */}\n                \n                <Col>\n                    <Button\n                        type='submit'\n                        variant='outline-warning'\n                        \n                    >\n                        {/* Submit */}\n                        <i className=\"fas fa-search\"></i>\n                    </Button>\n                </Col>\n            </Row>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport { \n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    USER_DETAILS_RESET,\n    USER_UPDATE_PROFILE_REQUEST,\n    USER_UPDATE_PROFILE_SUCCESS,\n    USER_UPDATE_PROFILE_FAIL,\n    USER_UPDATE_PROFILE_RESET,\n    USER_LIST_REQUEST,\n    USER_LIST_SUCCESS,\n    USER_LIST_FAIL,\n    USER_LIST_RESET,\n    USER_DELETE_REQUEST,\n    USER_DELETE_SUCCESS,\n    USER_DELETE_FAIL,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL,\n } from '../constants/userConstants'\n\n import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\n export const login = (email, password) => async (dispatch) => {\n     try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers:{\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/api/users/login/',\n            {'username': email, 'password': password},\n            config\n            )\n        // not sure why 'await' is breaking this...\n        // now I do: in order to use await, the function directly enclosing it needs to be async\n        \n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n     } catch (error) {\n        dispatch({ \n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n     }\n }\n\n\n export const logout = () => (dispatch) => {\n     localStorage.removeItem('userInfo')\n     dispatch({ type: USER_LOGOUT })\n     dispatch({ type: USER_DETAILS_RESET })\n     dispatch({ type: ORDER_LIST_MY_RESET })\n     dispatch({ type: USER_LIST_RESET })\n }\n \n\n export const register = (name, email, password) => async (dispatch) => {\n    try {\n       dispatch({\n           type: USER_REGISTER_REQUEST\n       })\n\n       const config = {\n           headers:{\n               'Content-Type': 'application/json'\n           }\n       }\n\n       const { data } = await axios.post(\n           '/api/users/register/',\n           { 'name': name, 'email': email, 'password': password },\n           config\n           )\n\n           dispatch({\n               type: USER_REGISTER_SUCCESS,\n               payload: data\n           })\n\n           dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n           localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n       dispatch({ \n           type: USER_REGISTER_FAIL,\n           payload: error.response && error.response.data.detail\n               ? error.response.data.detail\n               : error.message,\n       })\n    }\n}\n\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n       dispatch({\n           type: USER_DETAILS_REQUEST\n       })\n\n       const { userLogin: { userInfo },} = getState()\n\n       const config = {\n           headers:{\n               'Content-Type': 'application/json',\n               Authorization: `Bearer ${userInfo.token}`\n           }\n       }\n\n       const { data } = await axios.get(\n           `/api/users/${id}/`,\n           config\n           )\n\n           dispatch({\n               type: USER_DETAILS_SUCCESS,\n               payload: data\n           })\n\n    } catch (error) {\n       dispatch({ \n           type: USER_DETAILS_FAIL,\n           payload: error.response && error.response.data.detail\n               ? error.response.data.detail\n               : error.message,\n       })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n       dispatch({\n           type: USER_UPDATE_PROFILE_REQUEST\n       })\n\n       const { userLogin: { userInfo },} = getState()\n\n       const config = {\n           headers:{\n               'Content-Type': 'application/json',\n               Authorization: `Bearer ${userInfo.token}`\n           }\n       }\n\n       const { data } = await axios.put(\n           `/api/users/profile/update/`,\n           user,\n           config\n           )\n\n           dispatch({\n               type: USER_UPDATE_PROFILE_SUCCESS,\n               payload: data\n           })\n\n           dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n\n    } catch (error) {\n       dispatch({ \n           type: USER_UPDATE_PROFILE_FAIL,\n           payload: error.response && error.response.data.detail\n               ? error.response.data.detail\n               : error.message,\n       })\n    }\n}\n\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/users/`,\n            config\n        )\n\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/users/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/users/update/${user._id}/`,\n            user,\n            config\n        )\n\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nfunction Header() {\n\n    // https://react-redux.js.org/api/hooks#useselector-examples\n    const userLogin = useSelector(state => state.userLogin)\n    // destruct what is coming from the store to just grab userInfo\n    const { userInfo } = userLogin \n\n    const dispatch = useDispatch()\n\n    const logoutHandler = () => {\n        // console.log('Logout')\n        dispatch(logout())\n    }\n\n    return (\n        <header>\n            {/* bootstrap navbar from https://react-bootstrap.github.io/components/navbar/ */}\n            <Navbar bg=\"black\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n\n                    <LinkContainer to='/'>\n                        <Navbar.Brand to=\"/\">\n                        <img\n                            alt=\"\"\n                            src=\"https://emojis.slackmojis.com/emojis/images/1526918323/3968/wu-tang.jpg?1526918323\"\n                            width=\"30\"\n                            height=\"30\"\n                            className=\"d-inline-block align-top\"\n                            />{' '}\n\n                            36Chambers\n                            </Navbar.Brand>\n                    </LinkContainer>\n\n                    <SearchBox />\n\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n\n                        {/* icons imported from font-awesome library which is imported in index.html */}\n                        {/* <Nav.Link href=\"/cart\"><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link> */}\n                        {/* <Nav.Link href=\"/login\"><i className=\"fas fa-user\"></i> Login</Nav.Link>  */}\n                        {/* changing stock href to LinkContainers */}\n\n                        <LinkContainer to='/cart'>\n                            <Nav.Link to=\"/cart\"><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>\n                        </LinkContainer>\n                        \n                        \n                        {/* if user is logged in show Profile and Logout link, else show Login link */}\n                        {userInfo ? (\n                            <NavDropdown title={'Welcome, ' + userInfo.name} id='username'>\n\n                                <LinkContainer to='/profile'>\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                                </LinkContainer>\n\n                                <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\n\n                            </NavDropdown>\n                        ): (\n                            <LinkContainer to='/login'>\n                                <Nav.Link to=\"/login\"><i className=\"fas fa-user\"></i> Login</Nav.Link>\n                            </LinkContainer>\n                        )}\n\n                        {/* <LinkContainer to='/login'>\n                            <Nav.Link to=\"/login\"><i className=\"fas fa-user\"></i> Login</Nav.Link>\n                        </LinkContainer> */}\n                        {/* moved inside of logic above */}\n\n\n                        {userInfo && userInfo.isAdmin && (\n                                <NavDropdown title='Admin' id='adminmenue'>\n                                    <LinkContainer to='/admin/userlist'>\n                                        <NavDropdown.Item>Users</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/productlist'>\n                                        <NavDropdown.Item>Products</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                    <LinkContainer to='/admin/orderlist'>\n                                        <NavDropdown.Item>Orders</NavDropdown.Item>\n                                    </LinkContainer>\n\n                                </NavDropdown>\n                            )}\n                    </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction Footer() {\n    return (\n        <footer>\n            <Container>\n                <Row>\n                    {/* centered and padded here, it is held at the bottom by setting the viewport height of main to 80 in index.css */}\n                    <Col className=\"text-center py-3\">\n                        Copywrite &copy; 36Chambers\n                    </Col>\n                </Row>\n            </Container>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\n// https://fontawesome.com/v5.15/icons/star?style=solid\n// font-awesome icons go in i tags\n\nfunction Rating({ value, text, color }) {\n    return (\n        <div className=\"rating\">\n            <span>\n                <i style={{ color }} className={\n                    // logic to render star icon and if so full or half for all five stars\n                    value >= 1\n                        ? 'fas fa-star'\n                        : value >= 0.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 2\n                        ? 'fas fa-star'\n                        : value >= 1.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 3\n                        ? 'fas fa-star'\n                        : value >= 2.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 4\n                        ? 'fas fa-star'\n                        : value >= 3.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            <span>\n                <i style={{ color }} className={\n                    value >= 5\n                        ? 'fas fa-star'\n                        : value >= 4.5\n                            ? 'fas fa-star-half-alt'\n                            : 'far fa-star'\n                }>\n\n                </i>\n            </span>\n\n            {/* if texts exists then add it */}\n            <span> {text && text}</span>\n\n        </div>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\n// https://react-bootstrap.github.io/components/cards/\n\nfunction Product({ product }) {\n    return (\n\n        <Card className=\"my-3 p-3 rounded\">\n            {/* <a href={`/product/${product._id}`}>\n                <Card.Img src={product.image} />\n            </a> */}\n            \n            {/* using Link instead of a tags so page doesnt refresh */}\n\n            <Link to={`/product/${product._id}`}>\n                <Card.Img src={product.image} />\n            </Link>\n            {/* <Card.ImgOverlay className=\"dark-overlay\"> */}\n            <Card.Body className=\"text-center\">\n\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as=\"div\">\n                        <strong>{product.name}</strong>\n                    </Card.Title>\n                </Link>\n\n                <Card.Text as=\"div\">\n                    <div className=\"my-3\">\n                        {/* {product.rating} from {product.numReviews} reviews <---old code before Rating component */}\n                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                    </div>\n                </Card.Text>\n\n                <Card.Text as=\"h3\">\n                    ${product.price}\n                </Card.Text>\n\n            </Card.Body>\n            {/* </Card.ImgOverlay> */}\n        </Card>\n    )\n}\n\nexport default Product\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\n// https://react-bootstrap.github.io/components/spinners/\n\nfunction Loader() {\n    return (\n        <Spinner\n        animation='border'\n        role='border'\n        style={{\n            height: '100px',\n            width: '100px',\n            margin: 'auto',\n            display: 'block'\n        }}\n        >\n            <span className='sr-only'>Loading...</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\n// https://react-bootstrap.github.io/components/alerts/\n\nfunction Message({variant, children}) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction Paginate({ pages, page, keyword = '', isAdmin = false }) {\n    if (keyword) {\n        keyword = keyword.split('?keyword=')[1].split('&')[0]\n    }\n\n    return (pages > 1 && (\n        <Pagination>\n            {[...Array(pages).keys()].map((x) => (\n                <LinkContainer\n                    key={x + 1}\n                    to={!isAdmin ?\n                        `/?keyword=${keyword}&page=${x + 1}`\n                        : `/admin/productlist/?keyword=${keyword}&page=${x + 1}`\n                    }\n                >\n                    <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n                </LinkContainer>\n            ))}\n            {/* <Pagination.Ellipsis /> */}\n        </Pagination>\n    )\n    )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport { \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST, \n    PRODUCT_DETAILS_SUCCESS, \n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL, \n} from '../constants/productConstants'\n\n\nexport const listProducts = (keyword = '') => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_LIST_REQUEST })\n\n        // const { data } = await axios.get('/api/products')\n        const { data } = await axios.get(`/api/products${keyword}`)\n        // added keyword for search functionality to request \n\n        dispatch({ \n            type: PRODUCT_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({ \n            type: PRODUCT_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_TOP_REQUEST })\n\n        const { data } = await axios.get(`/api/products/top/`)\n\n        dispatch({\n            type: PRODUCT_TOP_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_TOP_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/products/${id}`)\n\n        dispatch({ \n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({ \n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_DELETE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.delete(\n            `/api/products/delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: PRODUCT_DELETE_SUCCESS,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DELETE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\n\nexport const createProduct = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/create/`,\n            {},\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_SUCCESS,\n            payload: data,\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_UPDATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/products/update/${product._id}/`,\n            product,\n            config\n        )\n        dispatch({\n            type: PRODUCT_UPDATE_SUCCESS,\n            payload: data,\n        })\n\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_UPDATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/products/${productId}/reviews/`,\n            review,\n            config\n        )\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\n            payload: data,\n        })\n\n\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_CREATE_REVIEW_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\n// https://react-bootstrap.github.io/components/carousel/\n\nfunction ProductCarousel() {\n    const dispatch = useDispatch()\n\n    const productTopRated = useSelector(state => state.productTopRated)\n    const { error, loading, products } = productTopRated\n\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n\n    return (loading ? <Loader />\n        : error\n            ? <Message variant='danger'>{error}</Message>\n            : (\n                <Carousel variant=\"dark\" fade pause='hover' className='bg-dark'>\n                    {products.map(product => (\n                        <Carousel.Item key={product._id}>\n                            <Link to={`/product/${product._id}`}>\n                                <Image src={product.image} alt={product.name} fluid />\n                                <Carousel.Caption className='carousel.caption'>\n                                    {/* <h4>{product.name} (${product.price})</h4> */}\n                                    <h4>{product.name}</h4>\n                                </Carousel.Caption>\n                            </Link>\n                        </Carousel.Item>\n                    ))}\n                </Carousel>\n            )\n\n    )\n}\n\nexport default ProductCarousel\n","// import React, { useState, useEffect } from 'react'\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Card } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport SearchBox from '../components/SearchBox'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport { listProducts } from '../actions/productActions'\n\n// import axios from 'axios'\n// not making API call here anymore\n\n// import products from '../products'\n// this was the temporary products import\n\n// useState docs\n// https://reactjs.org/docs/hooks-state.html\n\n// useEffect docs\n// https://reactjs.org/docs/hooks-effect.html\n// useEffect gets triggered every time the component loads (or when a state attribute/value gets updated)\n\n// axios docs\n// https://axios-http.com/\n\nfunction HomeScreen({history}) {\n\n    // const [products, setProducts] = useState([])\n    // local state not needed anymore\n    \n    //function is async and await returns the promise of the api url, data is destructured and then state is reset\n    // empty array at end so useEffect updates when componend loads, not when state is changed\n\n    // useEffect(() => {\n    //     function fetchProducts() {\n    //         axios.get('http://127.0.0.1:8000/api/products').then(res => {\n    //             console.log(res.data);  \n    //     fetchProducts()\n    // }, [])\n    // below code is better\n\n\n    // useEffect(() => {\n    //     console.log('useEffect triggered')\n    //     async function fetchProducts() {\n    //         const { data } = await axios.get('/api/products/')\n    //         setProducts(data)\n    //     }\n    //     fetchProducts()\n    // }, [])\n    // getting rid of API call here bc it is being made from productActions now\n\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n\n    const {error, loading, products, page, pages} = productList\n\n    let keyword = history.location.search\n    console.log(keyword)\n\n    useEffect(() => {\n        dispatch(listProducts(keyword))\n    }, [dispatch, keyword])\n\n    // const products = []\n    // solved no products error\n\n    return (\n        <div>\n\n            {/* <SearchBox /> */}\n            \n            {!keyword && \n                <Card>\n                    <Card.Header as=\"h3\">Products with the most <i class=\"fas fa-star\"></i>'s</Card.Header>\n                    <ProductCarousel />\n                </Card>\n                }\n            {/* if no keyword, output carousel condition kills the carousel if using the searchbox  */}\n            {/* put on a card for the title */}\n\n            {/* <br /><br />\n            <h3>Latest Products</h3> */}\n\n            {loading ? <Loader />\n                : error ? <Message variant='danger'>{error}</Message>\n                    :\n                    <div>\n                    <Row>\n                        {products.map(product => (\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                                <Product product={product} />\n                             </Col>\n                        ))}\n                    </Row>\n\n                    <Paginate page={page} pages={pages} keyword={keyword} />\n                    </div>\n            }\n            {/* if loading render <h2>Loading...</h2>, if there is an error render the error, or if not render the Row  */}\n\n\n            {/* iterate over products and put each one in a column */}\n            {/* the parameters in Col is bootstrap for how many columns on what size screen */}\n            {/* the key={product._id} gets rid of a react error that warns against not having unique keys when iterating over something, this is solved by using the unique attribute _id */}\n            {/* <Row>\n                {products.map(product => (\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                        // <h3>{product.name}</h3>\n\n                        // Product components being passed product as a prop\n                        <Product product={product} />\n                    </Col>\n                ))}\n            </Row> */}\n            {/* relocated this above */}\n        </div>\n    )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link, Router } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form, FormControl } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listProductDetails, createProductReview } from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\n// import axios from 'axios'\n// not using anymore\n\n// import products from '../products'\n// not necessary anymore\n\n\nfunction ProductScreen({ match, history }) {\n\n    // variable that is the result of what is found in the products array looking for the _id - p for product\n    // const product = products.find((p) => p._id === match.params.id)\n    // not necessary anymore\n\n    // const [product, setProduct] = useState([])\n    // not using anymore\n\n    // useEffect(() => {\n    //     console.log('useEffect triggered')\n    //     async function fetchProduct() {\n    //         const { data } = await axios.get(`/api/products/${match.params.id}`)\n    //         setProduct(data)\n    //     }\n    //     fetchProduct()\n    // }, [])\n    // not making API call here anymore\n\n    // qty set to state within the component (useState hook), not redux\n    const [qty, setQty] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { loading, error, product } = productDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\n    const {\n        loading: loadingProductReview,\n        error: errorProductReview,\n        success: successProductReview,\n    } = productReviewCreate\n\n    // useEffect(() => {\n    //     dispatch(listProductDetails(match.params.id))\n    // }, [dispatch, match, useEffect])\n\n    useEffect(() => {\n        if (successProductReview) {\n            setRating(0)\n            setComment('')\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n        }\n\n        dispatch(listProductDetails(match.params.id))\n\n    }, [dispatch, match, successProductReview])\n\n    // let product = {}\n    // not necessary\n\n\n    const addToCartHandler = () => {\n        console.log(`product number ${match.params.id} tossed in the bag`)\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\n    }\n\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        dispatch(createProductReview(\n            match.params.id, {\n            rating,\n            comment\n        }\n        ))\n    }\n\n    return (\n        <div>\n            {/* <h1>{product.name}</h1> */}\n            {/* testing output of product name */}\n\n            <Link to='/' className='btn btn-light my-3'>Go Back</Link>\n\n            {loading ?\n                <Loader />\n                : error\n                    ? <Message variant='danger'>{error}</Message>\n                :(\n                    <div>\n                        <Row>\n                            <Col md={4}>\n                                <Image src={product.image} alt={product.name} fluid rounded />\n                            </Col>\n\n                            <Col md={3}>\n                                {/* <Card> */}\n                                <ListGroup variant=\"flush\">\n                                    <ListGroup.Item>\n                                        {/* <h3>{product.name}</h3> */}\n                                        <Card.Header as=\"h3\">{product.name}</Card.Header>\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        Price: ${product.price}\n                                    </ListGroup.Item>\n\n                                    <ListGroup.Item>\n                                        {/* Description:  */}\n                                        {product.description}\n                                    </ListGroup.Item>\n                                </ListGroup>\n                                {/* </Card> */}\n                            </Col>\n\n                            <Col md={3}>\n                                <Card>\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Price:</Col>\n                                            <Col><strong>${product.price}</strong></Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    {/* should probably offer size if selling t shirts */}\n                                    {/* <ListGroup.Item>\n                                        <Row>\n                                            <Col>Size:</Col>\n                                            <Col xs='auto' className='my-1'>\n                                                <FormControl\n                                                    as=\"select\"\n                                                    >\n                                                        <option>Small</option>\n                                                        <option>Medium</option>\n                                                        <option>Large</option>\n                                                        <option>XL</option>\n                                                </FormControl>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>                                 */}\n                \n\n                                    <ListGroup.Item>\n                                        <Row>\n                                            <Col>Status:</Col>\n                                            <Col>\n                                                {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n\n                                    {product.countInStock > 0 && (\n                                        <ListGroup.Item>\n                                            <Row>\n                                                <Col>Qty:</Col>\n                                                <Col xs='auto' className='my-1'>\n                                                    <Form.Control\n                                                        as=\"select\"\n                                                        value={qty}\n                                                        onChange={(event) => setQty(event.target.value)}\n                                                    >\n\n                                                        {\n                                                            [...Array(product.countInStock).keys()].map((x) => (\n                                                                <option key={x + 1} value={x + 1}>\n                                                                    {x + 1}\n                                                                </option>\n                                                            ))\n                                                        }\n                                                        {/* \n                                                        create stock qty as options:\n                                                        created an array out of countInStock, mapped through array and created option with a key and value \n                                                        */}\n\n                                                    </Form.Control>\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    )}\n\n                                    <ListGroup.Item>\n                                        <Button \n                                            onClick={addToCartHandler}\n                                            className='btn-block btn-dark' \n                                            disabled={product.countInStock === 0} \n                                            type='button'>\n                                                Add To Cart\n                                        </Button>\n                                    </ListGroup.Item>\n\n                                </Card>\n                            </Col>\n                        </Row>\n\n                        <br />\n\n                        <Row>\n                            <Col md={6}>\n                            <h4>Reviews</h4>\n                            {product.reviews.length === 0 && <Message variant='info'>No Reviews</Message>}\n\n                                <ListGroup variant='flush'>\n                                            {product.reviews.map((review) => (\n                                                <ListGroup.Item key={review._id}>\n                                                    <strong>{review.name}</strong>\n                                                    <Rating value={review.rating} color='#f8e825' />\n                                                    <p>{review.createdAt.substring(0, 10)}</p>\n                                                    <p>{review.comment}</p>\n                                                </ListGroup.Item>\n                                            ))}\n                                <ListGroup.Item>\n                                            {/* <h4>Write a review</h4> */}\n                                            <Card.Header as=\"h4\">Write a review</Card.Header>\n                                            <br />\n\n                                            {loadingProductReview && <Loader />}\n                                            {successProductReview && <Message variant='success'>Review Submitted</Message>}\n                                            {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\n\n                                            {userInfo ? (\n                                                <Form onSubmit={submitHandler}>\n                                                    <Form.Group controlId='rating'>\n                                                        <Form.Label>Rating</Form.Label>\n                                                        <Form.Control\n                                                            as='select'\n                                                            value={rating}\n                                                            onChange={(event) => setRating(event.target.value)}\n                                                        >\n                                                            <option value=''>Select...</option>\n                                                            <option value='1'>1 - Poor</option>\n                                                            <option value='2'>2 - Fair</option>\n                                                            <option value='3'>3 - Good</option>\n                                                            <option value='4'>4 - Very Good</option>\n                                                            <option value='5'>5 - Excellent</option>\n                                                        </Form.Control>\n                                                    </Form.Group>\n                                                    <br />\n                                                    <Form.Group controlId='comment'>\n                                                        <Form.Label>Review</Form.Label>\n                                                        <Form.Control\n                                                            as='textarea'\n                                                            row='5'\n                                                            value={comment}\n                                                            onChange={(e) => setComment(e.target.value)}\n                                                        ></Form.Control>\n                                                    </Form.Group>\n\n                                                    <Button\n                                                        disabled={loadingProductReview}\n                                                        type='submit'\n                                                        variant='dark'\n                                                    >\n                                                        Submit\n                                                    </Button>\n\n                                                </Form>\n                                            ) : (\n                                                    <Message variant='info'>Please <Link to='/login'>login</Link> to write a review</Message>\n                                                )}\n                                        </ListGroup.Item>\n                                    </ListGroup>\n                                           \n                            </Col>\n\n                        </Row>\n\n                    </div>\n                )\n\n            }\n\n\n\n           {/* <Row>\n               <Col md={6}>\n                   <Image src={product.image} alt={product.name} fluid />\n               </Col>\n\n               <Col md={3}>\n                   <ListGroup variant=\"flush\">\n                       <ListGroup.Item>\n                            <h3>{product.name}</h3>\n                       </ListGroup.Item>\n\n                       <ListGroup.Item>\n                           <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\n                       </ListGroup.Item>\n\n                       <ListGroup.Item>\n                           Price: ${product.price}\n                       </ListGroup.Item>\n\n                       <ListGroup.Item>\n                           Description: {product.description}\n                       </ListGroup.Item>\n                   </ListGroup>\n               </Col>\n\n\n               <Col md={3}>\n                   <Card>\n                       <ListGroup.Item>\n                           <Row>\n                               <Col>Price:</Col>\n                               <Col><strong>${product.price}</strong></Col>\n                           </Row>\n                       </ListGroup.Item>\n\n                       <ListGroup.Item>\n                           <Row>\n                               <Col>Status:</Col>\n                               <Col>\n                                {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n                               </Col>\n                           </Row>\n                       </ListGroup.Item>\n\n                       <ListGroup.Item>\n                           <Button className='btn-block btn-dark' disabled={product.countInStock === 0} type='button'>Add To Cart</Button>\n                       </ListGroup.Item>\n\n\n                   </Card>\n               </Col>\n           </Row> */}\n            {/* this entire block was moved  */}\n\n        </div>\n    )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport { \n    CART_ADD_ITEM,\n    CART_REMOVE_ITEM,\n    CART_SAVE_SHIPPING_ADDRESS,\n    CART_SAVE_PAYMENT_METHOD,\n } from '../constants/cartConstants'\n\n\n// https://redux.js.org/api/store#getstate\n// getState() returns the current state tree of application; is equal to the last value returned by the store's reducer\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n        type: CART_ADD_ITEM,\n        payload: {\n            product: data._id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }\n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n    // local storage can only have key value pairs in JSON string format\n\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    dispatch({\n        type: CART_REMOVE_ITEM,\n        payload: id, \n    })\n\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_SHIPPING_ADDRESS,\n        payload: data, \n    })\n\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n    dispatch({\n        type: CART_SAVE_PAYMENT_METHOD,\n        payload: data, \n    })\n\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nfunction CartScreen({ match, location, history }) {\n    const productId = match.params.id\n\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\n    // console.log('qty:', qty)\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    // destructure cart\n    const { cartItems } = cart\n    // console.log('cart items: ', cartItems)\n\n\n    useEffect(() => {\n        if (productId) {\n            dispatch(addToCart(productId, qty))\n        }\n    }, [dispatch, productId, qty])\n\n\n    const removeFromCartHandler = (id) => {\n        // console.log('removed: product', id)\n        dispatch(removeFromCart(id))\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=shipping')\n        // if logged in redirect to shipping if not redirect to login\n    }\n\n    return (\n        // <div>\n        //     <h1>ready to check out?</h1>\n        // </div>\n\n        <Row>\n            <Col md={8}>\n                <h1>ready to check out?</h1>\n\n                {cartItems.length === 0 ? (\n                    <Message variant='dark'>\n                        Your cart is empty <Link to='/'>Go Back</Link>\n                    </Message>\n                ) : (\n                    <ListGroup variant='flush'>\n                        {cartItems.map(item => (\n                            <ListGroup.Item key={item.product}>\n                                <Row>\n                                    <Col md={2}>\n                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                    </Col>\n\n                                    <Col md={3}>\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                    </Col>\n\n                                    <Col md={2}>\n                                        ${item.price}\n                                    </Col>\n\n                                    <Col md={3}> Qty:\n                                        <Form.Control\n                                            as=\"select\"\n                                            value={item.qty}\n                                            onChange={(event) => dispatch(addToCart(item.product, Number(event.target.value)))}\n                                        >\n\n                                             {\n                                                [...Array(item.countInStock).keys()].map((x) => (\n                                                    <option key={x + 1} value={x + 1}>\n                                                        {x + 1}\n                                                    </option>\n                                                ))\n                                            }\n                                       \n                                        </Form.Control>\n                                    </Col>\n\n                                    <Col md={1}>\n                                        <Button \n                                        type='button' \n                                        variant='light'\n                                        onClick={() => removeFromCartHandler(item.product)}\n                                        >\n                                            <i className='fas fa-trash'></i>\n                                        </Button>\n                                    </Col>\n\n                                </Row>\n                            </ListGroup.Item>\n                        ))}\n                    </ListGroup>\n                )}\n            </Col>\n\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Cart Total:</h2>\n                            <h3>{cartItems.reduce((accumulator, item) => accumulator + item.qty, 0)} items</h3>\n                            <h3>${cartItems.reduce((accumulator, item) => accumulator + item.qty * item.price, 0).toFixed(2)}</h3>\n                            {/* reduce() is to return the sum of all the elements in an array\n                            https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce\n                            0 is where you start counting and .toFixed(2) is forcing 2 decimal places */}\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Button\n                                type='button'\n                                variant=\"dark\"\n                                className='btn-block'\n                                disabled={cartItems.length === 0}\n                                onClick={checkoutHandler}\n                            >\n                                Proceed To Checkout\n                            </Button>\n                        </ListGroup.Item>\n                                            \n                    </ListGroup>\n                </Card>\n            \n            </Col>\n        </Row>\n\n\n\n    )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nfunction FormContainer({ children }) {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { login } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\nfunction LoginScreen({ location, history }) {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { error, loading, userInfo } = userLogin\n\n    useEffect(() => {\n        if(userInfo){\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        // console.log('Submitted')\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Card \n            className=\"text-center\"\n            >\n        <FormContainer>\n        <Card.Header as=\"h3\">Sign In</Card.Header>\n        <br />\n\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                    <Form.Control\n                        type='email'\n                        placeholder='Enter Email'\n                        value={email}\n                        onChange={(event) => setEmail(event.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <br />\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <br />\n\n                <Button type='submit' variant='dark'>Sign in</Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    New customer? <Link\n                    to={redirect ? `/register?redirect=${redirect}` : '/register'}\n                    >Create an account</Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n        </Card>\n    )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { register } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\n\nfunction RegisterScreen({ location, history }) {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    const userRegister = useSelector(state => state.userRegister)\n    const { error, loading, userInfo } = userRegister\n\n    useEffect(() => {\n        if(userInfo){\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        if(password != confirmPassword){\n            setMessage('Passwords do not match')\n        } else {\n            dispatch(register(name, email, password))\n        }\n        \n    }\n\n    return (\n        <Card \n            className=\"text-center\"\n            >\n        <FormContainer>\n            <Card.Header as=\"h3\">Create An Account</Card.Header>\n            <br />\n\n            {message && <Message variant='danger'>{message}</Message>}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n\n            <Form onSubmit={submitHandler}>\n            \n                <Form.Group controlId='name'>\n                    <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            required\n                            type='name'\n                            placeholder='Enter Your Name'\n                            value={name}\n                            onChange={(event) => setName(event.target.value)}\n                        >\n                    </Form.Control>\n                </Form.Group>\n                <br />\n\n                <Form.Group controlId='email'>\n                    <Form.Label>Email Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='email'\n                            placeholder='Enter Email'\n                            value={email}\n                            onChange={(event) => setEmail(event.target.value)}\n                        >\n                    </Form.Control>\n                </Form.Group>\n                <br />\n\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <br />\n\n                <Form.Group controlId='passwordConfirm'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control\n                        required\n                        type='password'\n                        placeholder='Enter Password'\n                        value={confirmPassword}\n                        onChange={(event) => setConfirmPassword(event.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n                <br />\n\n                <Button type='submit' variant='dark'>Register</Button>\n\n            </Form>\n\n            <Row className='py-3'>\n                <Col>\n                    Already have an account? <Link\n                    to={redirect ? `/login?redirect=${redirect}` : '/login'}\n                    >Sign In</Link>\n                </Col>\n            </Row>\n\n        </FormContainer>\n        </Card>\n    )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col, Table, Card } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\n\nfunction ProfileScreen({ history }) {\n    \n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector(state => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user || !user.name || success || userInfo._id !== user._id) {\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success])\n\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        if(password !== confirmPassword){\n            setMessage('Passwords do not match')\n        } else {\n            // console.log('user info updating')\n            dispatch(updateUserProfile({'id': user._id, 'name': name, 'email': email, 'password': password}))\n            setMessage('') \n            // setting message to a blank string clears the error message about passwords not matching\n        }\n        \n    }\n\n    return (\n        <Row>\n            <Card\n            className=\"text-center\"\n            style={{ width: '20rem' }}\n            >\n            {/* <Col md={3}> */}\n                <Card.Header as=\"h3\">Profile</Card.Header>\n                <p>To update your profile, add or change details and hit the Update Profile button</p>\n\n                {message && <Message variant='danger'>{message}</Message>}\n                {error && <Message variant='danger'>{error}</Message>}\n                {loading && <Loader />}\n\n                <Form onSubmit={submitHandler}>\n                \n                    <Form.Group controlId='name'>\n                        <Form.Label>Name</Form.Label>\n                            <Form.Control\n                                required\n                                type='name'\n                                placeholder='Enter Your Name'\n                                value={name}\n                                onChange={(event) => setName(event.target.value)}\n                            >\n                        </Form.Control>\n                    </Form.Group>\n                    <br />\n\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email Address</Form.Label>\n                            <Form.Control\n                                required\n                                type='email'\n                                placeholder='Enter Email'\n                                value={email}\n                                onChange={(event) => setEmail(event.target.value)}\n                            >\n                        </Form.Control>\n                    </Form.Group>\n                    <br />\n\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            \n                            type='password'\n                            placeholder='Enter Password'\n                            value={password}\n                            onChange={(event) => setPassword(event.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <br />\n\n                    <Form.Group controlId='passwordConfirm'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control\n                            \n                            type='password'\n                            placeholder='Enter Password'\n                            value={confirmPassword}\n                            onChange={(event) => setConfirmPassword(event.target.value)}\n                        >\n                        </Form.Control>\n                    </Form.Group>\n                    <br />\n\n                    <Button type='submit' variant='dark'>Update Profile</Button>\n\n                </Form>\n\n                <br />\n\n            {/* </Col> */}\n            </Card>\n\n\n            <Col md={6}>\n                <Card>\n            \n                {/* <h2>Orders</h2> */}\n                <Card.Header as=\"h3\">Orders</Card.Header>\n                {loadingOrders ? (\n                    <Loader/>\n\n                ) : errorOrders ? (\n                    <Message variant='danger'>{errorOrders}</Message>\n                ) : (\n                    <Table striped responsive className='table-sm'>\n                        <thead>\n                            <tr>\n                                <th>Order ID</th>\n                                <th>Date Placed</th>\n                                <th>Total</th>\n                                <th>Paid On</th>\n                                {/* <th>Delivered</th> */}\n                                <th></th>\n                            </tr>\n                        </thead>\n\n                        <tbody>\n                            {orders.map(order => (\n                                <tr key={order._id}>\n                                {/* key cleared react error */}\n                                    <td>{order._id}</td>\n                                    <td>{order.createdAt.substring(0, 10)}</td>\n                                    {/* .substring limits the characters from 0 to 10 */}\n                                    <td>${order.totalPrice}</td>\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\n                                        <i className='fas fa-times' style={{ color: 'red '}}></i>\n                                    )}</td>\n                                    <td>\n                                        <LinkContainer to={`/order/${order._id}`}>\n                                            <Button variant='dark' className='btn-sm'>Details</Button>\n                                        </LinkContainer>\n                                    </td>\n                                </tr>\n                            ))}\n\n                        </tbody>\n\n                    </Table>\n                )}\n            </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport { \n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n    ORDER_CREATE_RESET,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAIL,\n    ORDER_PAY_REQUEST,\n    ORDER_PAY_SUCCESS,\n    ORDER_PAY_FAIL,\n    ORDER_PAY_RESET,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAIL,\n    ORDER_LIST_MY_RESET,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAIL,\n    ORDER_DELIVER_REQUEST,\n    ORDER_DELIVER_SUCCESS,\n    ORDER_DELIVER_FAIL,\n    ORDER_DELIVER_RESET,\n } from '../constants/orderConstants'\n import { CART_CLEAR_ITEMS } from '../constants/cartConstants'\n\n\n \n\n export const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `/api/orders/add/`,\n            order,\n            config\n        )\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: CART_CLEAR_ITEMS,\n            payload: data\n        })\n\n        localStorage.removeItem('cartItems')\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${id}/pay/`,\n            paymentResult,\n            config\n        )\n\n        dispatch({\n            type: ORDER_PAY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DELIVER_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(\n            `/api/orders/${order._id}/deliver/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: ORDER_DELIVER_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_DELIVER_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/myorders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}\n\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST\n        })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.get(\n            `/api/orders/`,\n            config\n        )\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data\n        })\n\n\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAIL,\n            payload: error.response && error.response.data.detail\n                ? error.response.data.detail\n                : error.message,\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nfunction CheckoutSteps({ step1, step2, step3, step4 }) {\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                { step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Login</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Login</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                { step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Shipping</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                { step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Payment</Nav.Link>\n                )}\n            </Nav.Item>\n\n            <Nav.Item>\n                { step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : (\n                    <Nav.Link disabled>Place Order</Nav.Link>\n                )}\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nfunction ShippingScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalState, setPostalState] = useState(shippingAddress.postalState)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        // console.log('submit shipping')\n        dispatch(saveShippingAddress({ address, city, postalState, postalCode, country }))\n        history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n\n            <CheckoutSteps step1 step2 />\n\n            <h1>Shipping</h1>\n\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='Enter Your Shipping Address'\n                            value={address}\n                            // value={address ? address : ''}\n                            // if the address exists, add the address from state. if address doesn't exist, set to empty string\n                            onChange={(event) => setAddress(event.target.value)}\n                        >\n                    </Form.Control>\n                </Form.Group>\n                <br />\n\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='City'\n                            // value={city ? city : ''}\n                            value={city}\n                            onChange={(event) => setCity(event.target.value)}\n                        >\n                    </Form.Control>\n                </Form.Group>\n                <br />\n                \n                <Form.Group controlId='postalCode'>\n                    <Form.Label>State</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='State'\n                            // value={postalState ? postalState : ''}\n                            value={postalState}\n                            onChange={(event) => setPostalState(event.target.value)}\n                        >\n                    </Form.Control>\n                </Form.Group> \n                <br />\n\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Zip Code</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='Zip Code'\n                            // value={postalCode ? postalCode : ''}\n                            value={postalCode}\n                            onChange={(event) => setPostalCode(event.target.value)}\n                        >\n                    </Form.Control>\n                </Form.Group> \n                <br />\n\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                        <Form.Control\n                            required\n                            type='text'\n                            placeholder='Country'\n                            // value={country ? country : ''}\n                            value={country}\n                            onChange={(event) => setCountry(event.target.value)}\n                        >\n                    </Form.Control>\n                </Form.Group>\n                <br />\n\n                <Button type='submit' variant='dark'>On to payment</Button>\n\n            </Form>\n\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nfunction PaymentScreen({ history }) {\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n\n    const dispatch = useDispatch()\n\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\n    // for future payment methods, make this an emtpy string and allow user to select alt payment methods\n\n    if (!shippingAddress.address) {\n        history.push('/shipping')\n    }\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        dispatch(savePaymentMethod(paymentMethod))\n        history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3 />\n\n            <Form onSubmit={submitHandler}>\n\n                <Form.Group>\n                    <Form.Label as='legend'>\n                        Select Method of Payment\n                    </Form.Label>\n                    <Col>\n                        <Form.Check \n                            type='radio'\n                            label='PayPal or Credit Card' \n                            id='paypal' \n                            name='paymentMethod' \n                            checked \n                            onChange={(event) => setPaymentMethod(event.target.value)}>\n\n                        </Form.Check>\n                    </Col>\n                </Form.Group>\n                <br />\n                <Button type='submit' variant='dark'>\n                    Continue\n                </Button>\n\n            </Form>\n            \n        </FormContainer>\n    )\n}\n\nexport default PaymentScreen\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\n\nfunction PlaceOrderScreen({ history }) {\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, error, success } = orderCreate\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n\n    cart.itemsPrice = cart.cartItems.reduce((accumulator, item) => accumulator + item.price * item.qty, 0).toFixed(2)\n\n    // if items total over $100, shipping costs $0, else it costs $10\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\n\n    // new york state sales tax is 8.875% \n    cart.taxPrice = Number((0.08875) * cart.itemsPrice).toFixed(2)\n\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    if (!cart.paymentMethod) {\n        history.push('/payment')\n    }\n\n    useEffect(() => {\n        if (success) {\n            history.push(`/order/${order._id}`)\n            dispatch({ type: ORDER_CREATE_RESET })\n        }\n    }, [success, history])\n\n\n    const placeOrder = () => {\n        // console.log('Placed Order')\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n\n    return (\n        <div>\n            <CheckoutSteps step1 step2 step3 step4 />\n            \n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Shipping: </strong>\n                                {cart.shippingAddress.address},\n                                {'  '}\n                                {cart.shippingAddress.city}, \n                                {'  '} \n                                {cart.shippingAddress.postalState} {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {cart.paymentMethod}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n\n                            {cart.cartItems.length === 0 ? <Message variant='info'>Your cart is empty</Message> : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item> \n\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item> \n\n                            <ListGroup.Item>\n                                <Button \n                                    type='button'\n                                    className='btn-block'\n                                    variant='light'\n                                    disabled={cart.cartItems === 0}\n                                    onClick={placeOrder}\n                                    >Place Order</Button>    \n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n\n        </div>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\n\nfunction OrderScreen({ match, history }) {\n    const orderId = match.params.id\n    const dispatch = useDispatch()\n\n    const [sdkReady, setSdkReady] = useState(false)\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, error, loading } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading:loadingPay, success:successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    if (!loading && !error) {\n        order.itemsPrice = order.orderItems.reduce((accumulator, item) => accumulator + item.price * item.qty, 0).toFixed(2)\n    }\n\n\n    // https://www.npmjs.com/package/react-paypal-button-v2\n\n    // https://developer.paypal.com/docs/checkout/\n    // can't just add the premade html script tags in react, must make your own\n    const addPayPalScript = () => {\n        // create script element\n        const script = document.createElement('script')\n        // set it to javascript\n        script.type = 'text/javascript'\n        // set source to url from docs and change client ID\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AarXQYGT2PLbNwkGCN6OEAtg7tejnyfpMAitAyz7Z70NhSgGXBiW80q_WHQSaWpMNiKbL0u4z9asyeT2'\n        // make sure script is async\n        script.async = true\n        // make onload function\n        script.onload = () => {\n            // change sdkReady state to true on load\n            setSdkReady(true)\n        }\n        // append script to dom\n        document.body.appendChild(script)\n    }\n\n\n    useEffect(() => {\n\n        if (!userInfo) {\n            history.push('/login')\n        }\n\n        if (!order || successPay || order._id !== Number(orderId) || successDeliver) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch({ type: ORDER_DELIVER_RESET })\n            dispatch(getOrderDetails(orderId))\n        } else if(!order.isPaid){\n            if(!window.paypal){\n                addPayPalScript()\n            }else{\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, order, orderId, successPay, successDeliver])\n\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n\n    return loading ? (\n        <Loader />\n    ) : error ? (\n        <Message variant='danger'>{error}</Message>\n    ) : (\n        <div>\n            <h1>Order: {order._id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p><strong>Name: </strong>{order.user.name}</p>\n                            <p><strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n\n                            <p>\n                                <strong>Shipping: </strong>\n                                {order.shippingAddress.address},\n                                {'  '}\n                                {order.shippingAddress.city}, \n                                {'  '} \n                                {order.shippingAddress.postalState} {order.shippingAddress.postalCode}, {order.shippingAddress.country}\n                            </p>\n\n                            {order.isDelivered ? (\n                                <Message variant='success'>Delivered on {order.deliveredAt.substring(0, 10)}</Message>\n                            ): (\n                                <Message variant='warning'>Not Delivered</Message>\n                            )}\n\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method: </strong>\n                                {order.paymentMethod}\n                            </p>\n\n                            {order.isPaid ? (\n                                <Message variant='success'>Paid on {order.paidAt.substring(0, 10)}</Message>\n                            ): (\n                                <Message variant='warning'>Not Paid</Message>\n                            )}\n\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n\n                            {order.orderItems.length === 0 ? <Message variant='info'>Order is empty</Message> : (\n                                <ListGroup variant='flush'>\n                                    {order.orderItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={2}>\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items:</Col>\n                                    <Col>${order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping:</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax:</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total:</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item> \n\n                            {!order.isPaid && (\n                                <ListGroup.Item>\n                                    {loadingPay && <Loader/>}\n\n                                    {!sdkReady ?(\n                                        <Loader/>\n                                    ) : (\n                                        <PayPalButton\n                                            amount={order.totalPrice}\n                                            onSuccess={successPaymentHandler}\n                                        />\n                                    )}\n                                </ListGroup.Item>\n                            )}\n\n                        </ListGroup>\n\n\n                        {loadingDeliver && <Loader />}\n                                {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\n                                    <ListGroup.Item>\n                                        <Button\n                                            type='button'\n                                            className='btn btn-block'\n                                            onClick={deliverHandler}\n                                        >\n                                            Mark As Delivered\n                                        </Button>\n                                    </ListGroup.Item>\n                                )}\n\n                    </Card>\n                </Col>\n            </Row>\n\n        </div>\n    )\n}\n\nexport default OrderScreen\n","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\n\nfunction UserListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this user?')) {\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <div>\n            <Card>\n            {/* <h1>Users</h1> */}\n            <Card.Header as=\"h3\">Users</Card.Header>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>NAME</th>\n                                    <th>EMAIL</th>\n                                    <th>ADMIN</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user._id}</td>\n                                        <td>{user.name}</td>\n                                        <td>{user.email}</td>\n                                        <td>{user.isAdmin ? (\n                                            <i className='fas fa-check' style={{ color: 'green' }}></i>\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red '}}></i>\n                                            )}</td>\n\n                                        <td>\n                                            <LinkContainer to={`/admin/user/${user._id}/edit/`}>\n                                                <Button variant='dark' className='btn-sm'>\n                                                    <i className='fas fa-edit'></i>\n                                                </Button>\n                                            </LinkContainer>\n                                            {/* <p></p> */}\n                                            <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\n                                                <i className='fas fa-trash'></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n            </Card>\n        </div>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nfunction UserEditScreen({ match, history }) {\n\n    const userId = match.params.id\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n\n    //isAdmin set to false by default\n    const [isAdmin, setIsAdmin] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error, loading, user } = userDetails\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = userUpdate\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: USER_UPDATE_RESET })\n            history.push('/admin/userlist')\n        } else {\n\n            if (!user.name || user._id !== Number(userId)) {\n                dispatch(getUserDetails(userId))\n            } else {\n                setName(user.name)\n                setEmail(user.email)\n                setIsAdmin(user.isAdmin)\n            }\n        }\n\n    }, [dispatch, user, userId, successUpdate, history])\n\n    const submitHandler = (event) => {\n        event.preventDefault()\n        dispatch(updateUser({ _id: user._id, name, email, isAdmin }))\n    }\n\n    return (\n        <div>\n            <Link to='/admin/userlist'>\n                Go Back\n            </Link>\n\n            {/* FormContainer must be wrapped in div */}\n            <FormContainer>\n                <h1>Edit User</h1>\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(event) => setName(event.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email Address</Form.Label>\n                                <Form.Control\n                                    type='email'\n                                    placeholder='Enter Email'\n                                    value={email}\n                                    onChange={(event) => setEmail(event.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='isadmin'>\n                                <Form.Check\n                                    type='checkbox'\n                                    label='Is Admin'\n                                    checked={isAdmin}\n                                    onChange={(event) => setIsAdmin(event.target.checked)}\n                                >\n                                </Form.Check>\n                            </Form.Group>\n\n                            <Button type='submit' variant='primary'>\n                                Update\n                        </Button>\n\n                        </Form>\n                    )}\n\n            </FormContainer >\n        </div>\n\n    )\n}\n\nexport default UserEditScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport { listProducts, deleteProduct, createProduct, updateProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nfunction ProductListScreen({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    let keyword = history.location.search\n    \n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if (!userInfo.isAdmin) {\n            history.push('/login')\n        }\n\n        if (successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts(keyword))\n        }\n\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, keyword])\n\n\n    const deleteHandler = (id) => {\n\n        if (window.confirm('Are you sure you want to delete this product?')) {\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n        <div>\n            <Card>\n            <Row className='align-items-center'>\n                {/* <Col>\n                    <h1>Products</h1>\n                </Col> */}\n\n                <Card.Header as=\"h3\">Products\n                </Card.Header>\n\n                {/* <Col className='text-right'>\n                    <Button variant='dark' className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                </Col> */}\n            </Row>\n\n            {loadingDelete && <Loader />}\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n\n            {loadingCreate && <Loader />}\n            {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <div>\n                            <Table striped bordered hover responsive className='table-sm'>\n                                <thead>\n                                    <tr>\n                                        <th>ID</th>\n                                        <th>NAME</th>\n                                        <th>PRICE</th>\n                                        <th>CATEGORY</th>\n                                        <th>BRAND</th>\n                                        <th></th>\n                                    </tr>\n                                </thead>\n\n                                <tbody>\n                                    {products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n\n                                            <td>\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                                    <Button variant='dark' className='btn-sm'>\n                                                        <i className='fas fa-edit'></i>\n                                                    </Button>\n                                                </LinkContainer>\n\n                                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\n                                                    <i className='fas fa-trash'></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            </Table>\n                            <Paginate pages={pages} page={page} isAdmin={true} />\n                        </div>\n                    )}\n\n\n                    <Button variant='dark' className='my-3' onClick={createProductHandler}>\n                        <i className='fas fa-plus'></i> Create Product\n                    </Button>\n                \n        </Card>\n        </div>\n    )\n}\n\nexport default ProductListScreen","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n\nfunction ProductEditScreen({ match, history }) {\n\n    const productId = match.params.id\n\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [image, setImage] = useState('')\n    const [brand, setBrand] = useState('')\n    const [category, setCategory] = useState('')\n    const [countInStock, setCountInStock] = useState(0)\n    const [description, setDescription] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    const { error, loading, product } = productDetails\n\n    const productUpdate = useSelector(state => state.productUpdate)\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = productUpdate\n\n\n    useEffect(() => {\n\n        if (successUpdate) {\n            dispatch({ type: PRODUCT_UPDATE_RESET })\n            history.push('/admin/productlist')\n        } else {\n            if (!product.name || product._id !== Number(productId)) {\n                dispatch(listProductDetails(productId))\n            } else {\n                setName(product.name)\n                setPrice(product.price)\n                setImage(product.image)\n                setBrand(product.brand)\n                setCategory(product.category)\n                setCountInStock(product.countInStock)\n                setDescription(product.description)\n\n            }\n        }\n\n\n\n    }, [dispatch, product, productId, history, successUpdate])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(updateProduct({\n            _id: productId,\n            name,\n            price,\n            image,\n            brand,\n            category,\n            countInStock,\n            description\n        }))\n    }\n\n    const uploadFileHandler = async (e) => {\n        const file = e.target.files[0]\n        const formData = new FormData()\n\n        formData.append('image', file)\n        formData.append('product_id', productId)\n\n        setUploading(true)\n\n        try {\n            const config = {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            }\n\n            const { data } = await axios.post('/api/products/upload/', formData, config)\n\n\n            setImage(data)\n            setUploading(false)\n\n        } catch (error) {\n            setUploading(false)\n        }\n    }\n\n    return (\n        <div>\n            <Link to='/admin/productlist'>\n                Go Back\n            </Link>\n\n            <Card \n            className=\"text-center\"\n            >\n            <FormContainer>\n                \n                <Card.Header as=\"h3\">Edit Product</Card.Header>\n                <br />\n                {loadingUpdate && <Loader />}\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\n                    : (\n                        <Form onSubmit={submitHandler}>\n\n                            <Form.Group controlId='name'>\n                                <Form.Label>Name</Form.Label>\n                                <Form.Control\n\n                                    type='name'\n                                    placeholder='Enter name'\n                                    value={name}\n                                    onChange={(e) => setName(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='price'>\n                                <Form.Label>Price</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter price'\n                                    value={price}\n                                    onChange={(e) => setPrice(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n\n                            <Form.Group controlId='image'>\n                                <Form.Label>Image</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter image'\n                                    value={image}\n                                    onChange={(e) => setImage(e.target.value)}\n                                >\n                                </Form.Control>\n\n                                <Form.File\n                                    id='image-file'\n                                    label='Choose File'\n                                    custom\n                                    onChange={uploadFileHandler}\n                                >\n\n                                </Form.File>\n                                {uploading && <Loader />}\n\n                            </Form.Group>\n\n\n                            <Form.Group controlId='brand'>\n                                <Form.Label>Brand</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter brand'\n                                    value={brand}\n                                    onChange={(e) => setBrand(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='countinstock'>\n                                <Form.Label>Stock</Form.Label>\n                                <Form.Control\n\n                                    type='number'\n                                    placeholder='Enter stock'\n                                    value={countInStock}\n                                    onChange={(e) => setCountInStock(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='category'>\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter category'\n                                    value={category}\n                                    onChange={(e) => setCategory(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Form.Group controlId='description'>\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n\n                                    type='text'\n                                    placeholder='Enter description'\n                                    value={description}\n                                    onChange={(e) => setDescription(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <br />\n                            <Button type='submit' variant='dark'>\n                                Update\n                        </Button>\n                        <br /><br />\n                        </Form>\n                    )}\n\n            </FormContainer >\n            </Card>\n        </div>\n\n    )\n}\n\nexport default ProductEditScreen","import React, { useState, useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { listOrders } from '../actions/orderActions'\n\nfunction OrderListScreen({ history }) {\n\n    const dispatch = useDispatch()\n\n    const orderList = useSelector(state => state.orderList)\n    const { loading, error, orders } = orderList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listOrders())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            <Card>\n            {/* <h1>Orders</h1> */}\n            <Card.Header as=\"h3\">Orders</Card.Header>\n            {loading\n                ? (<Loader />)\n                : error\n                    ? (<Message variant='danger'>{error}</Message>)\n                    : (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>USER</th>\n                                    <th>DATE</th>\n                                    <th>TOTAL</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n\n                            <tbody>\n                                {orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name}</td>\n                                        <td>{order.createdAt.substring(0, 10)}</td>\n                                        <td>${order.totalPrice}</td>\n\n                                        <td>{order.isPaid ? (\n                                            order.paidAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>{order.isDelivered ? (\n                                            order.deliveredAt.substring(0, 10)\n                                        ) : (\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                            )}\n                                        </td>\n\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}`}>\n                                                <Button variant='dark' className='btn-sm'>\n                                                    Details\n                                                </Button>\n                                            </LinkContainer>\n\n\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </Table>\n                    )}\n            </Card>\n        </div>\n    )\n}\n\nexport default OrderListScreen","import { Container } from 'react-bootstrap'\nimport { HashRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nfunction App() {\n    return ( \n        <Router>\n            <Header />\n            {/* className=\"py-3\" is bootstrap padding */}\n            <main className=\"py-3\"> \n                <Container>\n                    \n                    <Route path='/' component={HomeScreen} exact />\n                    <Route path='/login' component={LoginScreen} />\n                    <Route path='/register' component={RegisterScreen} />\n                    <Route path='/profile' component={ProfileScreen} />\n                    <Route path='/product/:id' component={ProductScreen} />\n                    <Route path='/cart/:id?' component={CartScreen} />\n                    <Route path='/shipping' component={ShippingScreen} />\n                    <Route path='/payment' component={PaymentScreen} />\n                    <Route path='/placeorder' component={PlaceOrderScreen} />\n                    <Route path='/order/:id' component={OrderScreen} />\n                    <Route path='/admin/userlist' component={UserListScreen} />\n                    <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n                    <Route path='/admin/productlist' component={ProductListScreen} />\n                    <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n                    <Route path='/admin/orderlist' component={OrderListScreen} />\n \n                </Container>\n            </main>\n            <Footer />\n        </Router>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './index.css';\nimport './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}